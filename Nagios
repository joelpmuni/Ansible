#**Nagios**
## 🧭 **What is Nagios?**
**Nagios** is an **open-source IT monitoring tool** used to monitor **systems, networks, infrastructure, and applications**. It provides **real-time alerts**, **health checks**, and **performance metrics**, helping IT teams identify and resolve issues before they affect users.
## 🔍 **Key Features**
| Feature           | Description                                              |
| ----------------- | -------------------------------------------------------- |
| **Monitoring**    | Servers, switches, routers, firewalls, apps, services    |
| **Alerts**        | Sends email/SMS alerts on failures or threshold breaches |
| **Plugins**       | Customizable plugins for checks (over 50+ default ones)  |
| **Dashboards**    | Web interface for live status, trends, and history       |
| **Extensibility** | Integrates with SNMP, NRPE, and 3rd-party tools          |
## 🧠 **How Nagios Works**
```
┌─────────────┐
│ Nagios Core │ ← Main Engine
└─────┬───────┘
      │
      ▼
┌───────────────┐
│   Plugins     │ ← Check services (e.g., ping, HTTP, SNMP, CPU)
└─────┬─────────┘
      ▼
┌───────────────┐
│ Target Hosts  │ ← Devices: routers, switches, firewalls, servers
└───────────────┘

⤷ Alerts go to Email/SMS, or trigger scripts (e.g., restart a service)
## 📦 **Nagios Components**

| Component           | Role                                                                    |
| ------------------- | ----------------------------------------------------------------------- |
| **Nagios Core**     | Main engine for scheduling and executing checks                         |
| **Plugins**         | Scripts that perform actual checks (`check_ping`, `check_http`, etc.)   |
| **NRPE/NSClient++** | Remote agents for checking internal metrics (disk, CPU, services)       |
| **Web Interface**   | UI for monitoring views and reports                                     |
| **Nagios XI**       | Commercial version with advanced dashboards, APIs, multi-tenant support |
## 🛠️ **Use Case: Network Device Monitoring**
As **Head of NRE Provisioning**, here’s how **Nagios** fits:
### 🎯 Monitored Items:
* **Switch Uptime** – using `check_snmp`
* **BGP/OSPF status** – custom scripts or SNMP traps
* **Link Status** – alert on interface down
* **Latency/Packet Loss** – `check_ping` or `check_icmp`
* **Firewall Rule Application** – use `check_http` on test ports
### ✅ Example: Monitoring a Cisco Switch via SNMP
```bash
/usr/lib/nagios/plugins/check_snmp -H 192.168.1.1 -o .1.3.6.1.2.1.1.3.0 -C public -w 5000 -c 10000
```
* `-o`: OID for uptime
* `-C`: SNMP community string
* `-w`, `-c`: Warning and critical thresholds
---
## 🚨 **Alerting**
* Nagios can alert via:
  * 📧 Email
  * 📱 SMS (via gateway)
  * 🧠 Slack/Teams integrations (with custom handlers)
  * 🔄 Auto-remediation scripts
---
## 📊 **Reporting & Trends**
* Uptime/Downtime summary
* SLA reports
* Event logs
* Alert history
---
## ✅ Pros and 🔻 Cons
| Pros                          | Cons                         |
| ----------------------------- | ---------------------------- |
| Lightweight & extensible      | Complex configs (without XI) |
| Large community & plugin base | Manual scaling effort        |
| Great for infra monitoring    | Limited modern dashboarding  |
---
## 🔁 Alternatives

| Tool                     | Notes                               |
| ------------------------ | ----------------------------------- |
| **Zabbix**               | Strong graphs and discovery         |
| **Prometheus + Grafana** | Great for metrics and dashboards    |
| **PRTG**                 | Commercial, SNMP/Flow/Cloud support |
| **Checkmk**              | Nagios-based with modern UI         |

Great! Here's a **step-by-step guide** to set up **Nagios Core** and monitor a **network device (router/switch)** using **SNMP**. This guide includes:

* ✅ Installation of Nagios Core on Ubuntu
* ⚙️ Configuration for SNMP monitoring
* 🧪 Example check for a Cisco switch/router
* 📄 Starter configuration files

---

## 🧰 **Step-by-Step Nagios Setup Guide (Ubuntu-based)**
### **Step 1: Install Required Packages**
```bash
sudo apt update
sudo apt install nagios4 nagios-plugins-contrib nagios-nrpe-plugin snmp snmp-mibs-downloader
```
> 📝 This installs:
> * `nagios4`: Core monitoring engine
> * `nagios-plugins`: Built-in checks (ping, HTTP, disk, etc.)
> * `snmp`: Required for network monitoring
> * `nrpe-plugin`: Optional agent for remote servers
### **Step 2: Enable Web Interface**
Nagios web UI is usually available at:
http://<your-server-ip>/nagios4/
Default credentials:
* **User**: `nagiosadmin`
* **Pass**: Set during install, or update via:
```bash
sudo htpasswd /etc/nagios4/htpasswd.users nagiosadmin
```
### **Step 3: Configure a Network Device (SNMP)**
Example: Cisco Switch SNMP Configuration
```plaintext
snmp-server community public RO
snmp-server enable traps
### **Step 4: Add Device to Nagios**
Edit:
```bash
sudo nano /etc/nagios4/conf.d/switch.cfg
```
Paste this sample config:
```cfg
define host {
  use                 generic-host
  host_name           cisco-switch01
  alias               Cisco Core Switch
  address             192.168.100.10
  check_command       check-host-alive
}

define service {
  use                 generic-service
  host_name           cisco-switch01
  service_description Uptime
  check_command       check_snmp_uptime
}
```
Create a custom check command in `commands.cfg`:
```bash
sudo nano /etc/nagios4/conf.d/commands.cfg
```
Add:
```cfg
define command {
  command_name check_snmp_uptime
  command_line /usr/lib/nagios/plugins/check_snmp -H $HOSTADDRESS$ -o 1.3.6.1.2.1.1.3.0 -C public -w 500000 -c 1000000
}
```
---
### **Step 5: Check & Restart Nagios**
```bash
sudo nagios4 -v /etc/nagios4/nagios.cfg
sudo systemctl restart nagios4
```
Now visit:
🔗 `http://<your-server-ip>/nagios4`
🖥️ You’ll see your switch and its uptime status!
---
## 🎁 Starter File Package
Here’s what’s included:
```
nagios-starter/
├── conf.d/
│   └── switch.cfg       → Host & service definition
├── commands.cfg         → SNMP check command
└── README.md            → Basic instructions
```

